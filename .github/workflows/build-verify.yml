name: build-verify-package
on:
  push:
    paths-ignore:
      #- '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - '*.md'
jobs:
  build-verify-package:
    runs-on: ubuntu-latest
    environment: Build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Set environment for branch
        run: |
          set -x
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "IMAGE_TAG=nightly" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == "refs/tags/$GITHUB_REF_NAME" ]]; then
            echo "IMAGE_TAG=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
          fi

      - name: Package container image
        run: |
          docker buildx build --platform=linux/amd64 --tag=microcks/microcks-docker-desktop-extension:$IMAGE_TAG .

      - name: Valdiate extension completion
        run: |
          # Does not work with the docker version of ubuntu-latest for now
          #docker extension validate metadata.json
          #docker extension validate microcks/microcks-docker-desktop-extension:$IMAGE_TAG

      - name: Login and push to Docker.io Registry
        if: github.repository_owner == 'microcks'
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          BUILDER=buildx-multi-arch
          docker buildx inspect $BUILDER || docker buildx create --name=$BUILDER --driver=docker-container --driver-opt=network=host
          docker buildx build --push \
            --platform=linux/amd64,linux/arm64 \
            --builder=$BUILDER \
            --build-arg TAG=$IMAGE_TAG \
            --tag=microcks/microcks-docker-desktop-extension:$IMAGE_TAG .
